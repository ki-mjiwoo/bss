<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://www.springframework.org/security/tags"  prefix="security"%>

<style>

.btn-group, .btn-group-vertical {
	position: relative;
	display: block;
	vertical-align: middle;
}

.pagination {
	justify-content: center
}

#button {
	display: flex;
	justify-content: flex-end;
}

#searchForm {
	display: block;
}

.row {
    display: flex;
    margin-right: -0.75rem;
    margin-left: -5.75px;
    justify-content: flex-start;
    flex-wrap: nowrap;
    padding-bottom: 10px;
}

.attendInsert{
	display: flex;
    justify-content: space-evenly;
}
.form-control {
	width: 15%;
	
}

/* 출력되는 테이블 스타일 */
#attendList{
	display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
}

</style>

<h5>출퇴근 [출근등록] 누르면 등록됨</h5>
<hr color="black">

<!-- 출근부 등록하는 폼  -->
<div>
	<form:form method="post" modelAttribute="attend" style="display: block;" action="${pageContext.request.contextPath}/pm/servicemanagement/attendInsert.do">
		<h3>여기에 시계 넣고싶음</h3>
		<div id="">
			<div class="row">
			    <div class="attendInsert">
			        <label for="atteDate">출근일</label>
			        <input type="date" class="form-control" name="atteDate" />
			        
			        <security:authorize  access="isAuthenticated()">
				        <security:authentication property="principal.realUser" var="authEmployee"/>
				        <label for="empName">사원명</label>
				        <input value="${authEmployee.empName}" name="empName" class="form-control"  />

				        <label for="depName">부서명</label>
				        <input value="${authEmployee.department.depName}" name="depName" class="form-control"  />
			        </security:authorize>
			        
			        
			        <label for="atteStime">출근시간</label>
			        <input type="datetime-local" class="form-control" name="atteStime" />
			        
			        <label for="atteEtime">퇴근시간</label>
			        <input type="datetime-local" class="form-control" name="atteEtime" />
			    </div>
			</div>
		</div>
		<div id="button">
			<input type="reset" class="btn btn-secondary" style="float: right; margin-right: 10px" />
			<button type="submit" class="btn btn-primary" style="float: right; margin-right: 10px" id="insertBtn" data-action="in"
			onclick="handleAttendance('in')">[출근등록]인데 이거 누르면 insert되고 [퇴근등록]으로 바꾸고 싶음</button>
		</div>
	</form:form>
</div>
<!-- 출퇴근 등록 폼 끝  -->



<!-- 출퇴근 사원명/사번으로 검색  -->
<div class="container-fluid">
	<div class="row">
		<div class="col-md-12">
			<div id="searchUI"></div>
			<div id="searchUI" class="row">
				<form:select path="simpleCondition.searchType" class="form-select col-md-1">
					<form:option value="empName" label="사원명" />
					<form:option value="empCd" label="사번" />
					<form:option value="empCd" label="근무일" />
				</form:select>
				<input type="text" class="form-inline form-control col-md-2"
					id="searchInput" name="searchWord" placeholder="검색을 입력하세요." />
				 <div><button type="button" class="btn btn-secondary" onClick="location.href='${pageContext.request.contextPath}/pm/servicemanagement/attendInsert.do'">출근등록</button></div>
			</div>
		</div>
	</div>
<!-- 출퇴근 사원명/사번으로 검색 끝  -->
	
	<!-- 출근부 조회되는 폼  -->
<div id="attendList"></div>

	<form:form id="searchForm" action="${pageContext.request.contextPath }/pm/servicemanagement/attendList" modelAttribute="simpleCondition">
		<form:hidden path="searchType" />
		<form:hidden path="searchWord" />
		<input type="hidden" name="page" />
	</form:form>
</div>
<!-- 출근부 조회되는 폼 끝-->

<script>

	//[츨근등록] 클릭하면 출근시간 등록되고 [퇴근등록]으로 바뀌고, 퇴근등록 누르면 퇴근시간 등록되게...
	var contextPath = "${pageContext.request.contextPath }";

	function handleAttendance(action) {
		// 폼 전송을 막기 위해 이벤트를 중지시킴
		event.preventDefault();

		var button = document.getElementById("insertBtn");

		if (action === "in") {
			button.innerHTML = "퇴근등록";
			button.setAttribute("data-action", "out");
		} else if (action === "out") {
			if (button.getAttribute("data-action") === "out") {
				button.form.submit();
			}
		}
	}

	/* 전체조회 페이징  */
	function fn_paging(page) {
		searchForm.page.value = page;
		$(searchForm).submit();
	}

	/* 직원조회 실행함수 */
	$(function() {
		searchEmp();
	});

	/* 직원조회  */
	let data = {};
	function searchEmp() {
		let setting = {
			url : `${pageContext.request.contextPath }/pm/servicemanagement/attendList`,
			method : "",
			dataType : "text",
			data : data,
			success : function(resp) {
				$('#attendList').html(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR)
				console.log(status)
				console.log(error)
			}
		}
		$.ajax(setting);
	}

	/* 검색한 조회 값의 페이징 */
	function fn_paging(page) {
		searchForm.page.value = page;
		data.page = page;
		searchEmp();
	}

	/* 검색  */
	$(searchInput).on("keyup", function(event) {
		$(searchUI).find(":input[name]").each(function(idx, input) {
			let name = input.name;
			let value = $(input).val();
			data[name] = value;
		});
		fn_paging(1);
		searchEmp();
	});
</script>